import { Intersection, Object3D } from 'three';
import { Ref, ShallowRef } from 'vue';
import { TresEvent } from 'src/types';
import { TresContext } from '../useTresContextProvider';

export declare const useRaycaster: (objects: Ref<Object3D[]>, ctx: TresContext) => {
    intersects: ShallowRef<Intersection<Object3D<import('three').Object3DEventMap>>[]>;
    onClick: (fn: (value: TresEvent) => void) => () => void;
    onDblClick: (fn: (value: TresEvent) => void) => () => void;
    onContextMenu: (fn: (value: TresEvent) => void) => () => void;
    onPointerMove: (fn: (value: TresEvent) => void) => () => void;
    onPointerUp: (fn: (value: TresEvent) => void) => () => void;
    onPointerDown: (fn: (value: TresEvent) => void) => () => void;
    onPointerMissed: (fn: (value: TresEvent) => void) => () => void;
    onWheel: (fn: (value: TresEvent) => void) => () => void;
    forceUpdate: () => void;
};
